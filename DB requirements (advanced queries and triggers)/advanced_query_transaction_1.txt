export const getAvgEnvData = async (countyState: string) => {
  // advanced query #2, this is in a transaction whose isolation level is REPEATABLE READ
  // we set it to this isolation level to prevent phantom reads
  const connection = await pool.getConnection(); // Get a connection from the pool
  try {
    await connection.query('SET TRANSACTION ISOLATION LEVEL REPEATABLE READ');
    await connection.beginTransaction(); // start the transaction

    const sql_query = `
      SELECT
        Soil.county_state,
        AVG(precipitation) AS avg_precipitation,
        AVG(ph) AS avg_pH_water
      FROM Soil
      JOIN Climate ON Soil.county_state = Climate.county_state
      WHERE Soil.county_state = Climate.county_state AND Soil.county_state = ?
      GROUP BY Soil.county_state;
    `;
    const [rows] = await connection.execute(sql_query, [countyState]);

    console.log('Average environmental data:', rows);

    await connection.commit(); // commit the transaction
    return rows; // return the result of the query
  } catch (err) {
    await connection.rollback(); // rollback the transaction in case of an error
    console.error('Get average environmental data error:', err);
    throw err; 
  } finally {
    connection.release(); // release the connection 
  }
};